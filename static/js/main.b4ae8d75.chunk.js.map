{"version":3,"sources":["store/login/types.js","store/login/action.js","container/login/Login.jsx","store/productsList/types.js","store/productsList/action.js","container/products/Products.jsx","App.js","store/login/index.js","store/productsList/index.js","store/rootReducer.js","store/index.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","LOGIN_USER_INIT","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","userLogin","cb","username","password","dispatch","type","loginFail","error","payload","fetch","method","headers","body","JSON","stringify","then","response","json","data","jwt","localStorage","Login","useState","form","setForm","useDispatch","history","useHistory","handleInputChange","event","target","name","value","push","className","noValidate","autoComplete","onSubmit","preventDefault","id","placeholder","onChange","LIST_PRODUCTS","LIST_PRODUCTS_INIT","LIST_PRODUCTS_SUCCESS","LIST_PRODUCTS_ERROR","productsList","productsListFail","ProductsListItems","products","useSelector","state","useEffect","map","product","price","to","App","basename","exact","path","Products","initialStore","success","loading","loadingProducts","rootReducer","combineReducers","login","prevState","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4ae8d75.chunk.js","sourcesContent":["const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGIN_USER_INIT = `${LOGIN_USER}_INIT`\r\nexport const LOGIN_USER_SUCCESS = `${LOGIN_USER}_SUCCESS`\r\nexport const LOGIN_USER_ERROR = `${LOGIN_USER}_ERROR`\r\n","import { LOGIN_USER_INIT, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from './types'\r\n\r\nexport const userLogin = ({ username, password }, cb) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: LOGIN_USER_INIT })\r\n\r\n        const loginSuccess = (response) => {\r\n            dispatch({ type: LOGIN_USER_SUCCESS, payload: response })\r\n        }\r\n\r\n        const loginFail = (error) => {\r\n            dispatch({ type: LOGIN_USER_ERROR, payload: error })\r\n        }\r\n\r\n        try {\r\n            fetch('https://api-mock-mia.herokuapp.com/auth/login', {\r\n                method: 'POST',\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify({ username, password })\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data.jwt) {\r\n                        //console.log(data)\r\n                        localStorage.jwt=data.jwt\r\n                        loginSuccess(username)\r\n                        cb()\r\n                    } else {\r\n                        loginFail(data.error)\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            loginFail('Hay un error', error)\r\n        }\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {userLogin} from '../../store/login/action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n    const [form, setForm] = useState({\r\n        username:'',\r\n        password:''\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n    const handleInputChange = (event) => {\r\n        const target = event.target\r\n        setForm({\r\n            ...form,\r\n            [target.name]:target.value\r\n        })\r\n    }\r\n\r\n    const cb = () => history.push('/products')\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        dispatch(userLogin(form,cb))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Login</h1>\r\n            <form noValidate autoComplete='off' onSubmit={handleSubmit}>\r\n                <div className='card'>\r\n                    <input \r\n                    id='username'\r\n                    name='username'\r\n                    className='form-control username'\r\n                    placeholder='Usuario'\r\n                    onChange={handleInputChange}\r\n                    value={form.username} />\r\n                </div>\r\n                <div className='card'>\r\n                    <input\r\n                    id='password'\r\n                    name='password'\r\n                    className='form-control'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    onChange={handleInputChange}\r\n                    value={form.password}/>\r\n                </div>\r\n                <div className='card'>\r\n                    <button\r\n                    id='buttonSubmit'\r\n                    className='btn btn-primary'\r\n                    type='submit'>Ingresar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","const LIST_PRODUCTS = 'LIST_PRODUCTS'\r\nexport const LIST_PRODUCTS_INIT = `${LIST_PRODUCTS}_INIT`\r\nexport const LIST_PRODUCTS_SUCCESS = `${LIST_PRODUCTS}_SUCCESS`\r\nexport const LIST_PRODUCTS_ERROR = `${LIST_PRODUCTS}_ERROR`\r\n","import { LIST_PRODUCTS_INIT, LIST_PRODUCTS_SUCCESS, LIST_PRODUCTS_ERROR } from './types'\r\n\r\nexport const productsList = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: LIST_PRODUCTS_INIT })\r\n\r\n        const productsListSuccess = (products) => {\r\n            dispatch({ type: LIST_PRODUCTS_SUCCESS, payload: products })\r\n        }\r\n\r\n        const productsListFail = (error) => {\r\n            dispatch({ type: LIST_PRODUCTS_ERROR, payload: error })\r\n        }\r\n\r\n        try {\r\n            fetch('https://api-mock-mia.herokuapp.com/products', {\r\n                method: 'GET'\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data) {\r\n                        //console.log(data)\r\n                        productsListSuccess(data)\r\n                    } else {\r\n                        productsListFail(data.error)\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            productsListFail('Hay un error', error)\r\n        }\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { productsList } from '../../store/productsList/action'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link} from 'react-router-dom'\r\n\r\nconst ProductsListItems = () => {\r\n    \r\n    const products = useSelector((state) => state.products.data)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(productsList())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {products.map((product) => {\r\n                return (\r\n                    <div className='list-group-item' key={product.id}>\r\n                        <div className='row'>\r\n                            <div className='col-4'>{product.name}</div>\r\n                            <div className='col-4'>{product.price}</div>\r\n                            <div className='col-4'><Link to={`/products/remove/${product.id}`} className='btn btn-danger'>Delete</Link></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsListItems","import Login from './container/login/Login';\nimport Products from './container/products/Products';\nimport {BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App text-center container\">\n      <Router basename='desafio-login-deploy-react'>\n        <div>\n          <nav className='navbar navbar-expand-lg'>\n            <ul className='nabvar-nav'>\n              <li className='nav-item'>\n                <NavLink to='/'>Login</NavLink>\n              </li>\n              <li className='nav-item'>\n                <NavLink to='/products'>Products</NavLink>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path='/'><Login /></Route>\n            <Route path='/products'><Products /></Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { LOGIN_USER_INIT, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from './types'\r\n\r\nconst initialStore = {\r\n    data:{},\r\n    error:null,\r\n    success:null,\r\n    loading:false\r\n}\r\n\r\nexport const loginReducer = (prevState = initialStore, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_INIT:\r\n            return {\r\n                ...prevState,\r\n                loading: true\r\n            }\r\n        \r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                data: action.payload,\r\n                loading: false,\r\n                success: true,\r\n                error: false\r\n            }\r\n\r\n        case LOGIN_USER_ERROR:\r\n            return {\r\n                ...prevState,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default:\r\n            return prevState\r\n    }\r\n}","import { LIST_PRODUCTS_INIT, LIST_PRODUCTS_SUCCESS, LIST_PRODUCTS_ERROR } from './types'\r\n\r\nconst initialStore = {\r\n    data:[],\r\n    error:null,\r\n    success:null,\r\n    loadingProducts:false\r\n}\r\n\r\nexport const productsReducer = (prevState = initialStore, action) => {\r\n    switch(action.type) {\r\n        case LIST_PRODUCTS_INIT:\r\n            return {\r\n                ...prevState,\r\n                loadingProducts: true\r\n            }\r\n        \r\n        case LIST_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                data: action.payload,\r\n                loadingProducts: false,\r\n                success: true,\r\n                error: false\r\n            }\r\n\r\n        case LIST_PRODUCTS_ERROR:\r\n            return {\r\n                ...prevState,\r\n                loadingProducts: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default:\r\n            return prevState\r\n    }\r\n}","import { combineReducers} from 'redux'\r\nimport { loginReducer} from './login'\r\nimport { productsReducer } from './productsList'\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    products: productsReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}