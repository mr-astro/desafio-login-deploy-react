{"version":3,"sources":["store/login/types.js","store/login/action.js","container/login/Login.jsx","container/users/Users.jsx","App.js","store/login/index.js","store/index.js","reportWebVitals.js","index.js"],"names":["LOGIN_USER","LOGIN_USER_INIT","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","userLogin","username","password","dispatch","type","loginFail","error","payload","fetch","method","headers","body","JSON","stringify","then","response","json","data","jwt","console","log","Login","useState","form","setForm","useDispatch","history","useHistory","handleInputChange","event","target","name","value","handleSubmit","useCallback","preventDefault","push","className","noValidate","autoComplete","onSubmit","id","placeholder","onChange","Users","App","to","exact","path","initialStore","success","loading","store","createStore","prevState","action","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7a8f09f.chunk.js","sourcesContent":["const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGIN_USER_INIT = `${LOGIN_USER}_INIT`\r\nexport const LOGIN_USER_SUCCESS = `${LOGIN_USER}_SUCCESS`\r\nexport const LOGIN_USER_ERROR = `${LOGIN_USER}_ERROR`\r\n","import { LOGIN_USER_INIT, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from './types'\r\n\r\nexport const userLogin = ({ username, password}) => {\r\n    return(dispatch) => {\r\n        dispatch({type: LOGIN_USER_INIT})\r\n        \r\n        const loginSuccess = (response) => {\r\n            dispatch({type: LOGIN_USER_SUCCESS, payload: response})\r\n        }\r\n\r\n        const loginFail = (error) => {\r\n            dispatch({type: LOGIN_USER_ERROR, payload: error})\r\n        }\r\n\r\n        try {\r\n            fetch('https://api-mock-mia.herokuapp.com/auth/login', {\r\n                method: 'POST',\r\n                headers: {\"Content-type\": \"application/json\"},\r\n                body: JSON.stringify({username, password})\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if(data.jwt) {\r\n                    console.log(username)\r\n                    loginSuccess(username)\r\n                } else {\r\n                    loginFail(data.error)\r\n                }\r\n            })\r\n        } catch (error) {\r\n            loginFail('Hay un error', error)\r\n        }\r\n    }\r\n}","import React, {useState, useCallback} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {userLogin} from '../../store/login/action'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n    const [form, setForm] = useState({\r\n        username:'',\r\n        password:''\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const handleInputChange = (event) => {\r\n        const target = event.target\r\n        setForm({\r\n            ...form,\r\n            [target.name]:target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = useCallback((event) => {\r\n        event.preventDefault()\r\n        dispatch(userLogin(form))\r\n        history.push('/users')\r\n    },\r\n    [dispatch, form, history])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Login</h1>\r\n            <form noValidate autoComplete='off' onSubmit={handleSubmit}>\r\n                <div className='card'>\r\n                    <input \r\n                    id='username'\r\n                    name='username'\r\n                    className='form-control username'\r\n                    placeholder='Usuario'\r\n                    onChange={handleInputChange}\r\n                    value={form.username} />\r\n                </div>\r\n                <div className='card'>\r\n                    <input\r\n                    id='password'\r\n                    name='password'\r\n                    className='form-control'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    onChange={handleInputChange}\r\n                    value={form.password}/>\r\n                </div>\r\n                <div className='card'>\r\n                    <button\r\n                    id='buttonSubmit'\r\n                    className='btn btn-primary'\r\n                    type='submit'>Ingresar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","const Users = () => {\r\n    return (\r\n        <h2>Listado de Usuarios</h2>\r\n    )\r\n}\r\n\r\nexport default Users","import Login from './container/login/Login';\nimport Users from './container/users/Users';\nimport {BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App text-center\">\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to='/'>Login</Link>\n              </li>\n              <li>\n                <Link to='/users'>Users</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route exact path='/'><Login /></Route>\n            <Route path='/users'><Users /></Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { LOGIN_USER_INIT, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from './types'\r\n\r\nconst initialStore = {\r\n    data:{},\r\n    error:null,\r\n    success:null,\r\n    loading:false\r\n}\r\n\r\nexport const loginReducer = (prevState = initialStore, action) => {\r\n    switch(action.type) {\r\n        case LOGIN_USER_INIT:\r\n            return {\r\n                ...prevState,\r\n                loading: true\r\n            }\r\n        \r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                data: action.payload,\r\n                loading: false,\r\n                success: true,\r\n                error: false\r\n            }\r\n\r\n        case LOGIN_USER_ERROR:\r\n            return {\r\n                ...prevState,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default:\r\n            return prevState\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport { loginReducer } from './login'\r\n\r\nconst store = createStore(loginReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}