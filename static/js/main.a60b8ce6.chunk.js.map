{"version":3,"sources":["components/navBar/NavBar.js","store/login/selectors.js","store/login/types.js","store/login/action.js","container/loginForm/LoginForm.jsx","container/login/Login.jsx","store/productsList/types.js","store/productsList/action.js","container/products/Products.jsx","container/productDelete/ProductDelete.jsx","routers/privateRoute/PrivateRoute.js","routers/appRouter/AppRouter.js","App.js","store/login/index.js","store/productsList/index.js","store/rootReducer.js","store/index.js","reportWebVitals.js","index.js"],"names":["NavBar","className","exact","to","activeClassName","userLoginSelector","state","LOGIN_USER","LOGIN_USER_INIT","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","userLogin","cb","username","password","dispatch","type","loginFail","error","payload","fetch","method","headers","body","JSON","stringify","then","response","json","data","jwt","localStorage","loginSuccess","LoginForm","isLoading","useState","form","setForm","useDispatch","handleInputChange","event","target","name","value","handleSubmit","useCallback","preventDefault","noValidate","autoComplete","onSubmit","id","placeholder","onChange","color","disabled","Login","userData","useSelector","login","Object","keys","length","loging","isError","LIST_PRODUCTS","LIST_PRODUCTS_INIT","LIST_PRODUCTS_SUCCESS","LIST_PRODUCTS_ERROR","productsList","productsListFail","ProductsListItems","products","useEffect","map","product","price","ProductDelete","useParams","setName","console","log","filter","PrivateRoute","Component","component","isLogin","Rest","render","routeProps","AppRouter","success","basename","path","Products","App","initialStore","loading","loadingProducts","rootReducer","combineReducers","prevState","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a60b8ce6.chunk.js","sourcesContent":["import { NavLink, } from \"react-router-dom\"\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className='navbar navbar-expand-lg'>\r\n            <ul className='nabvar-nav'>\r\n                <li className='nav-item'>\r\n                    <NavLink exact to='/' activeClassName='active'>Login</NavLink>\r\n                </li>\r\n                <li className='nav-item'>\r\n                    <NavLink to='/products' activeClassName='active'>Products</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const userLoginSelector = state => state","const LOGIN_USER = 'LOGIN_USER'\r\nexport const LOGIN_USER_INIT = `${LOGIN_USER}_INIT`\r\nexport const LOGIN_USER_SUCCESS = `${LOGIN_USER}_SUCCESS`\r\nexport const LOGIN_USER_ERROR = `${LOGIN_USER}_ERROR`\r\n","import { LOGIN_USER_INIT, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from './types'\r\n\r\nexport const userLogin = ({ username, password }, cb) => {\r\n    return (dispatch) => {\r\n        dispatch({ type: LOGIN_USER_INIT })\r\n\r\n        const loginSuccess = (username) => {\r\n            dispatch({ type: LOGIN_USER_SUCCESS, payload: username })\r\n        }\r\n\r\n        const loginFail = (error) => {\r\n            dispatch({ type: LOGIN_USER_ERROR, payload: error })\r\n        }\r\n\r\n        try {\r\n            fetch('https://api-mock-mia.herokuapp.com/auth/login', {\r\n                method: 'POST',\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify({ username, password })\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data.jwt) {\r\n                        //console.log(data)\r\n                        localStorage.jwt = data.jwt\r\n                        loginSuccess(username)\r\n                    } else {\r\n                        loginFail(data.error)\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            loginFail('Hay un error', error)\r\n        }\r\n    }\r\n}","import React, { useState, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { userLogin } from '../../store/login/action'\r\n\r\nexport const LoginForm = ({ isLoading }) => {\r\n\r\n    const [form, setForm] = useState({\r\n        username: '',\r\n        password: '',\r\n    })\r\n    const dispatch = useDispatch()\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target\r\n        setForm({\r\n            ...form,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = useCallback(\r\n        (event) => {\r\n            event.preventDefault();\r\n            dispatch(userLogin(form));\r\n        },\r\n        [dispatch, form]\r\n    );\r\n\r\n    return (\r\n        <form noValidate autoComplete='off' onSubmit={handleSubmit}>\r\n            <div className='card'>\r\n                <input\r\n                    id='username'\r\n                    name='username'\r\n                    className='form-control username'\r\n                    placeholder='username'\r\n                    onChange={handleInputChange}\r\n                    value={form.username}\r\n                />\r\n            </div>\r\n            <div className='card'>\r\n                <input\r\n                    id='password'\r\n                    name='password'\r\n                    className='form-control'\r\n                    placeholder='Password'\r\n                    type='password'\r\n                    onChange={handleInputChange}\r\n                    value={form.password}\r\n                />\r\n            </div>\r\n            <div className='card'>\r\n                <button\r\n                    id='buttonSubmit'\r\n                    className='btn btn-primary'\r\n                    color='primary'\r\n                    disabled={isLoading}\r\n                    type='submit'\r\n                >\r\n                    {isLoading ? 'Loading...' : 'Submit'}\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { userLoginSelector } from '../../store/login/selectors'\r\nimport { LoginForm } from '../loginForm/LoginForm'\r\n\r\nexport const Login = () => {\r\n    const userData = useSelector(userLoginSelector)\r\n    //console.log(userData.login.data)\r\n\r\n\r\n    if (userData.login.data && Object.keys(userData.login.data).length > 0) {\r\n        return (\r\n            <div className='card'>\r\n                <p id='log-success'>\r\n                    Logged in as <b>{userData.login.data}</b>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const isLoading = userData.loging\r\n    const isError = userData.login.error\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col-md-6 offset-md-3 mt-5'>\r\n                <LoginForm isLoading={isLoading} />\r\n                {isError && (\r\n                    <div className='card'>\r\n                        <p id='paragraph'>\r\n                            <b>Error: </b> {userData.login.error}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","const LIST_PRODUCTS = 'LIST_PRODUCTS'\r\nexport const LIST_PRODUCTS_INIT = `${LIST_PRODUCTS}_INIT`\r\nexport const LIST_PRODUCTS_SUCCESS = `${LIST_PRODUCTS}_SUCCESS`\r\nexport const LIST_PRODUCTS_ERROR = `${LIST_PRODUCTS}_ERROR`\r\n","import { LIST_PRODUCTS_INIT, LIST_PRODUCTS_SUCCESS, LIST_PRODUCTS_ERROR } from './types'\r\n\r\nexport const productsList = () => {\r\n    return (dispatch) => {\r\n        dispatch({ type: LIST_PRODUCTS_INIT })\r\n\r\n        const productsListSuccess = (products) => {\r\n            dispatch({ type: LIST_PRODUCTS_SUCCESS, payload: products })\r\n        }\r\n\r\n        const productsListFail = (error) => {\r\n            dispatch({ type: LIST_PRODUCTS_ERROR, payload: error })\r\n        }\r\n\r\n        try {\r\n            fetch('https://api-mock-mia.herokuapp.com/products', {\r\n                method: 'GET'\r\n            })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    if (data) {\r\n                        //console.log(data)\r\n                        productsListSuccess(data)\r\n                    } else {\r\n                        productsListFail(data.error)\r\n                    }\r\n                })\r\n        } catch (error) {\r\n            productsListFail('Hay un error', error)\r\n        }\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch} from 'react-redux'\r\nimport { productsList } from '../../store/productsList/action'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link} from 'react-router-dom'\r\n\r\nconst ProductsListItems = () => {\r\n    \r\n    const products = useSelector((state) => state.products.data)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(productsList())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <div>\r\n            {products.map((product) => {\r\n                return (\r\n                    <div className='list-group-item' key={product.id}>\r\n                        <div className='row'>\r\n                            <div className='col-4'>{product.name}</div>\r\n                            <div className='col-4'>{product.price}</div>\r\n                            <div className='col-4'><Link to={`/products/remove/${product.id}`} className='btn btn-danger'>Delete</Link></div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductsListItems","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst ProductDelete = () => {\r\n    const {id} = useParams()\r\n    const products = useSelector(state=>state.products.data)\r\n    const [name,setName] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n        console.log(products)\r\n        const name = products.filter(product=>product.id === id)\r\n        console.log(name)\r\n        setName(name)\r\n    },[id, products])\r\n\r\n    return (\r\n        <div>\r\n            seguro deseas borrar a {name}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductDelete","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, isLogin, ...Rest }: Props) => {\r\n    return isLogin ? <Route {...Rest} render={routeProps => <Component {...routeProps} />} /> : <Redirect to='/' />;\r\n}\r\n\r\nexport default PrivateRoute\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport NavBar from '../../components/navBar/NavBar'\r\nimport { Login } from '../../container/login/Login'\r\nimport Products from '../../container/products/Products'\r\nimport ProductDelete from '../../container/productDelete/ProductDelete'\r\nimport PrivateRoute from '../privateRoute/PrivateRoute'\r\n\r\n\r\nconst AppRouter = () => {\r\n    const isLogin = useSelector(state => state.login.success)\r\n    return (\r\n        <div>\r\n            <Router basename='desafio-login-deploy-react'>\r\n                <NavBar />\r\n                <Switch>\r\n                    <PrivateRoute path='/products/remove/:id' isLogin={isLogin} component={ProductDelete} />\r\n                    <Route path='/products' component={Products}/>\r\n                    <Route path='/' component={Login}/>\r\n                    <Route path='*'><h1>404 Not Found</h1></Route>\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import AppRouter from './routers/appRouter/AppRouter';\n\nconst App = () => {\n  return (\n    <div className=\"App text-center container\">\n      <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","import { LOGIN_USER_INIT, LOGIN_USER_SUCCESS, LOGIN_USER_ERROR } from './types'\r\n\r\nconst initialStore = {\r\n    data: {},\r\n    error: null,\r\n    success: null,\r\n    loading: false\r\n}\r\n\r\nexport const loginReducer = (prevState = initialStore, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER_INIT:\r\n            return {\r\n                ...prevState,\r\n                loading: true\r\n            }\r\n\r\n        case LOGIN_USER_SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                data: action.payload,\r\n                loading: false,\r\n                success: true,\r\n                error: false\r\n            }\r\n\r\n        case LOGIN_USER_ERROR:\r\n            return {\r\n                ...prevState,\r\n                loading: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return prevState\r\n    }\r\n}","import { LIST_PRODUCTS_INIT, LIST_PRODUCTS_SUCCESS, LIST_PRODUCTS_ERROR } from './types'\r\n\r\nconst initialStore = {\r\n    data:[],\r\n    error:null,\r\n    success:null,\r\n    loadingProducts:false\r\n}\r\n\r\nexport const productsReducer = (prevState = initialStore, action) => {\r\n    switch(action.type) {\r\n        case LIST_PRODUCTS_INIT:\r\n            return {\r\n                ...prevState,\r\n                loadingProducts: true\r\n            }\r\n        \r\n        case LIST_PRODUCTS_SUCCESS:\r\n            return {\r\n                ...prevState,\r\n                data: action.payload,\r\n                loadingProducts: false,\r\n                success: true,\r\n                error: false\r\n            }\r\n\r\n        case LIST_PRODUCTS_ERROR:\r\n            return {\r\n                ...prevState,\r\n                loadingProducts: false,\r\n                success: false,\r\n                error: action.payload\r\n            }\r\n        \r\n        default:\r\n            return prevState\r\n    }\r\n}","import { combineReducers} from 'redux'\r\nimport { loginReducer} from './login'\r\nimport { productsReducer } from './productsList'\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    products: productsReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default store","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}